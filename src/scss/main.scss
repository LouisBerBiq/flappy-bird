@import url(./reset.scss);

@mixin spriteCoordinates($position-x, $position-y, $width, $height) {
  background-position-x: $position-x;
  background-position-y: $position-y;
  width: $width;
  height: $height;
}

@mixin keyFrameBounceUpAndDown($initialTransform) {
  @keyframes bounceUpAndDown {
    0% {
      transform:  translateY($initialTransform);
    }
    50% {
      transform:  translateY($initialTransform - 10px);
    }
    100% {
      transform:  translateY($initialTransform);
    }
  }
}

@keyframes fadeOut {
  from {
    opacity: 100%;
  }
  to {
    opacity: 0%;
  }
}

* {
  image-rendering: optimizeSpeed;
	image-rendering: -moz-crisp-edges;
	image-rendering: -webkit-optimize-contrast;
	image-rendering: -o-crisp-edges;
	image-rendering: pixelated;
	-ms-interpolation-mode: nearest-neighbor;
}

::selection {
  background: transparent;
}

body {
  background: url('../resources/bcg.png');
  display: grid;
}

#gameUI, #gameCanvas {
  grid-column: 1;
  grid-row: 1;
}

#gameCanvas {
  display: block;
  margin: 20px auto;
  border: 1px solid rgba(0, 50, 100, 0.4);
  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.4);
}

#gameUI {
  z-index: 1;
  margin: auto;
}

UIElement {
  background-image: url('../resources/sprite.png');
  background-repeat: no-repeat;
}

#mainTitle {
  @extend UIElement;
  @include spriteCoordinates(-699px, -180px, 183px, 52px);
  $initialTransform: -144px;
  transform: translateY($initialTransform);
  @include keyFrameBounceUpAndDown($initialTransform);
}

.bounceUpAndDown {
  animation: bounceUpAndDown 1s infinite forwards;
}

.fadeout {
  animation: fadeOut 1s forwards;
}
